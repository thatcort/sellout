{
  "contractName": "Artist",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "commission",
          "type": "address"
        }
      ],
      "name": "Commissioned",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "c",
          "type": "address"
        }
      ],
      "name": "commission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061052d806100536000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461005c5780638da5cb5b14610073578063a0189c9d146100ca575b600080fd5b34801561006857600080fd5b5061007161010d565b005b34801561007f57600080fd5b50610088610231565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100d657600080fd5b5061010b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610256565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f81526020017f6e0000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61026a8160016102d090919063ffffffff16565b7f87b8886ac2b01f3c79fc6abdfb0bdb3db8b1218043ea63372cd7a5b94b6b579681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600081428460020154604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401838152602001826000191660001916815260200193505050506040516020818303038152906040526040518082805190602001908083835b60208310151561037e5780518252602082019150602081019050602083039250610359565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090506060604051908101604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018460020154600019168152602001600060010260001916815250836000016000836000191660001916815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101906000191690556040820151816002019060001916905590505060006001028360020154600019161415156104b9578083600001600085600201546000191660001916815260200190815260200160002060020181600019169055505b80836002018160001916905550600060010283600101546000191614156104e857808360010181600019169055505b82600301600081548092919060010191905055505050505600a165627a7a72305820cddd34a353a5bcb6259ffd1012bac1ae4e0f912bd07266984f563a484ca80c2f0029",
  "deployedBytecode": "0x608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461005c5780638da5cb5b14610073578063a0189c9d146100ca575b600080fd5b34801561006857600080fd5b5061007161010d565b005b34801561007f57600080fd5b50610088610231565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100d657600080fd5b5061010b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610256565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f81526020017f6e0000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61026a8160016102d090919063ffffffff16565b7f87b8886ac2b01f3c79fc6abdfb0bdb3db8b1218043ea63372cd7a5b94b6b579681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600081428460020154604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401838152602001826000191660001916815260200193505050506040516020818303038152906040526040518082805190602001908083835b60208310151561037e5780518252602082019150602081019050602083039250610359565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090506060604051908101604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018460020154600019168152602001600060010260001916815250836000016000836000191660001916815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101906000191690556040820151816002019060001916905590505060006001028360020154600019161415156104b9578083600001600085600201546000191660001916815260200190815260200160002060020181600019169055505b80836002018160001916905550600060010283600101546000191614156104e857808360010181600019169055505b82600301600081548092919060010191905055505050505600a165627a7a72305820cddd34a353a5bcb6259ffd1012bac1ae4e0f912bd07266984f563a484ca80c2f0029",
  "sourceMap": "391:419:2:-;;;105:10:5;97:5;;:18;;;;;;;;;;;;;;;;;;391:419:2;;;;;;",
  "deployedSourceMap": "391:419:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;263:63:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;263:63:5;;;;;;45:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;45:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;706:96:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;706:96:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;263:63:5;173:5;;;;;;;;;;;159:19;;:10;:19;;;151:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;315:5;;;;;;;;;;;302:19;;;45:20;;;;;;;;;;;;;:::o;706:96:2:-;753:18;769:1;753:7;:15;;:18;;;;:::i;:::-;782:15;795:1;782:15;;;;;;;;;;;;;;;;;;;;;;706:96;:::o;891:359:3:-;956:10;996:4;1001:3;1005:4;:9;;;979:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;979:36:3;;;969:47;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;969:47:3;;;;;;;;;;;;;;;;956:60;;1039:44;;;;;;;;;1051:4;1039:44;;;;;;1063:4;:9;;;1039:44;;;;;;;1080:1;1039:44;;;;;;;;1022:4;:10;;:14;1033:2;1022:14;;;;;;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1106:1;1093:14;;:4;:9;;;:14;;;;;1089:66;;;1146:2;1117:4;:10;;:21;1128:4;:9;;;1117:21;;;;;;;;;;;;;;;;;:26;;:31;;;;;;;1089:66;1172:2;1160:4;:9;;:14;;;;;;;1197:1;1184:14;;:4;:9;;;:14;;;;1180:49;;;1220:2;1208:4;:9;;:14;;;;;;;1180:49;1234:4;:9;;;:11;;;;;;;;;;;;;891:359;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport './Util.sol';\nimport './LinkedAddressList.sol';\nimport './Commission.sol';\n\n/** \n * Library Demo\n * \n * Originally the app was going to use a contract for the Artist.\n * I wrote a dequeue (LinkedAddressList) library to use. This contract demonstrates its use.\n * The library has unit tests that demonstrate it's use. See tests/TestLinkedAddressList.sol.\n */\ncontract Artist is Mortal {\n\n  using LinkedAddressList for LinkedAddressList.List;\n\n  LinkedAddressList.List backlog;\n  LinkedAddressList.List completed;\n\n  event Commissioned(Commission commission);\n\n  function nextJob() internal constant returns(Commission) {\n    return Commission(backlog.getHeadData());\n  }\n\n  function commission(Commission c) public {\n    backlog.addLast(c);\n    emit Commissioned(c);\n  }\n  \n\n\n\n}",
  "sourcePath": "/Users/briancort/OneDrive/Personal Development/ConsensysEthereum/finalProjectRedo/contracts/LibraryDemo.sol",
  "ast": {
    "absolutePath": "/Users/briancort/OneDrive/Personal Development/ConsensysEthereum/finalProjectRedo/contracts/LibraryDemo.sol",
    "exportedSymbols": {
      "Artist": [
        698
      ]
    },
    "id": 699,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 653,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/briancort/OneDrive/Personal Development/ConsensysEthereum/finalProjectRedo/contracts/Util.sol",
        "file": "./Util.sol",
        "id": 654,
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 1239,
        "src": "26:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/briancort/OneDrive/Personal Development/ConsensysEthereum/finalProjectRedo/contracts/LinkedAddressList.sol",
        "file": "./LinkedAddressList.sol",
        "id": 655,
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 984,
        "src": "47:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/briancort/OneDrive/Personal Development/ConsensysEthereum/finalProjectRedo/contracts/Commission.sol",
        "file": "./Commission.sol",
        "id": 656,
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 652,
        "src": "81:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 657,
              "name": "Mortal",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1079,
              "src": "410:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mortal_$1079",
                "typeString": "contract Mortal"
              }
            },
            "id": 658,
            "nodeType": "InheritanceSpecifier",
            "src": "410:6:2"
          }
        ],
        "contractDependencies": [
          1066,
          1079
        ],
        "contractKind": "contract",
        "documentation": "Library Demo\n\n * Originally the app was going to use a contract for the Artist.\nI wrote a dequeue (LinkedAddressList) library to use. This contract demonstrates its use.\nThe library has unit tests that demonstrate it's use. See tests/TestLinkedAddressList.sol.",
        "fullyImplemented": true,
        "id": 698,
        "linearizedBaseContracts": [
          698,
          1079,
          1066
        ],
        "name": "Artist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 661,
            "libraryName": {
              "contractScope": null,
              "id": 659,
              "name": "LinkedAddressList",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 983,
              "src": "428:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkedAddressList_$983",
                "typeString": "library LinkedAddressList"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "422:51:2",
            "typeName": {
              "contractScope": null,
              "id": 660,
              "name": "LinkedAddressList.List",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 718,
              "src": "450:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_List_$718_storage_ptr",
                "typeString": "struct LinkedAddressList.List"
              }
            }
          },
          {
            "constant": false,
            "id": 663,
            "name": "backlog",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "477:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_List_$718_storage",
              "typeString": "struct LinkedAddressList.List"
            },
            "typeName": {
              "contractScope": null,
              "id": 662,
              "name": "LinkedAddressList.List",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 718,
              "src": "477:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_List_$718_storage_ptr",
                "typeString": "struct LinkedAddressList.List"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 665,
            "name": "completed",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "511:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_List_$718_storage",
              "typeString": "struct LinkedAddressList.List"
            },
            "typeName": {
              "contractScope": null,
              "id": 664,
              "name": "LinkedAddressList.List",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 718,
              "src": "511:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_List_$718_storage_ptr",
                "typeString": "struct LinkedAddressList.List"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 669,
            "name": "Commissioned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "indexed": false,
                  "name": "commission",
                  "nodeType": "VariableDeclaration",
                  "scope": 669,
                  "src": "567:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Commission_$651",
                    "typeString": "contract Commission"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 666,
                    "name": "Commission",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 651,
                    "src": "567:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Commission_$651",
                      "typeString": "contract Commission"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "566:23:2"
            },
            "src": "548:42:2"
          },
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "651:51:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 675,
                            "name": "backlog",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "675:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_List_$718_storage",
                              "typeString": "struct LinkedAddressList.List storage ref"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getHeadData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 749,
                          "src": "675:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_List_$718_storage_ptr_$returns$_t_address_$bound_to$_t_struct$_List_$718_storage_ptr_$",
                            "typeString": "function (struct LinkedAddressList.List storage pointer) view returns (address)"
                          }
                        },
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "675:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 674,
                      "name": "Commission",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "664:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Commission_$651_$",
                        "typeString": "type(contract Commission)"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "664:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Commission_$651",
                      "typeString": "contract Commission"
                    }
                  },
                  "functionReturnParameters": 673,
                  "id": 679,
                  "nodeType": "Return",
                  "src": "657:40:2"
                }
              ]
            },
            "documentation": null,
            "id": 681,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "nextJob",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "639:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Commission_$651",
                    "typeString": "contract Commission"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 671,
                    "name": "Commission",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 651,
                    "src": "639:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Commission_$651",
                      "typeString": "contract Commission"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "638:12:2"
            },
            "scope": 698,
            "src": "594:108:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 696,
              "nodeType": "Block",
              "src": "747:55:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 689,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "769:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Commission_$651",
                          "typeString": "contract Commission"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Commission_$651",
                          "typeString": "contract Commission"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 686,
                        "name": "backlog",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "753:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_List_$718_storage",
                          "typeString": "struct LinkedAddressList.List storage ref"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addLast",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 892,
                      "src": "753:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_List_$718_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_List_$718_storage_ptr_$",
                        "typeString": "function (struct LinkedAddressList.List storage pointer,address)"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "753:18:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 693,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "795:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Commission_$651",
                          "typeString": "contract Commission"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Commission_$651",
                          "typeString": "contract Commission"
                        }
                      ],
                      "id": 692,
                      "name": "Commissioned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "782:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Commission_$651_$returns$__$",
                        "typeString": "function (contract Commission)"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 695,
                  "nodeType": "EmitStatement",
                  "src": "777:20:2"
                }
              ]
            },
            "documentation": null,
            "id": 697,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "commission",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "726:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Commission_$651",
                    "typeString": "contract Commission"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 682,
                    "name": "Commission",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 651,
                    "src": "726:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Commission_$651",
                      "typeString": "contract Commission"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "725:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "747:0:2"
            },
            "scope": 698,
            "src": "706:96:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 699,
        "src": "391:419:2"
      }
    ],
    "src": "0:810:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/briancort/OneDrive/Personal Development/ConsensysEthereum/finalProjectRedo/contracts/LibraryDemo.sol",
    "exportedSymbols": {
      "Artist": [
        698
      ]
    },
    "id": 699,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 653,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/briancort/OneDrive/Personal Development/ConsensysEthereum/finalProjectRedo/contracts/Util.sol",
        "file": "./Util.sol",
        "id": 654,
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 1239,
        "src": "26:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/briancort/OneDrive/Personal Development/ConsensysEthereum/finalProjectRedo/contracts/LinkedAddressList.sol",
        "file": "./LinkedAddressList.sol",
        "id": 655,
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 984,
        "src": "47:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/briancort/OneDrive/Personal Development/ConsensysEthereum/finalProjectRedo/contracts/Commission.sol",
        "file": "./Commission.sol",
        "id": 656,
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 652,
        "src": "81:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 657,
              "name": "Mortal",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1079,
              "src": "410:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mortal_$1079",
                "typeString": "contract Mortal"
              }
            },
            "id": 658,
            "nodeType": "InheritanceSpecifier",
            "src": "410:6:2"
          }
        ],
        "contractDependencies": [
          1066,
          1079
        ],
        "contractKind": "contract",
        "documentation": "Library Demo\n\n * Originally the app was going to use a contract for the Artist.\nI wrote a dequeue (LinkedAddressList) library to use. This contract demonstrates its use.\nThe library has unit tests that demonstrate it's use. See tests/TestLinkedAddressList.sol.",
        "fullyImplemented": true,
        "id": 698,
        "linearizedBaseContracts": [
          698,
          1079,
          1066
        ],
        "name": "Artist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 661,
            "libraryName": {
              "contractScope": null,
              "id": 659,
              "name": "LinkedAddressList",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 983,
              "src": "428:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkedAddressList_$983",
                "typeString": "library LinkedAddressList"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "422:51:2",
            "typeName": {
              "contractScope": null,
              "id": 660,
              "name": "LinkedAddressList.List",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 718,
              "src": "450:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_List_$718_storage_ptr",
                "typeString": "struct LinkedAddressList.List"
              }
            }
          },
          {
            "constant": false,
            "id": 663,
            "name": "backlog",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "477:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_List_$718_storage",
              "typeString": "struct LinkedAddressList.List"
            },
            "typeName": {
              "contractScope": null,
              "id": 662,
              "name": "LinkedAddressList.List",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 718,
              "src": "477:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_List_$718_storage_ptr",
                "typeString": "struct LinkedAddressList.List"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 665,
            "name": "completed",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "511:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_List_$718_storage",
              "typeString": "struct LinkedAddressList.List"
            },
            "typeName": {
              "contractScope": null,
              "id": 664,
              "name": "LinkedAddressList.List",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 718,
              "src": "511:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_List_$718_storage_ptr",
                "typeString": "struct LinkedAddressList.List"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 669,
            "name": "Commissioned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "indexed": false,
                  "name": "commission",
                  "nodeType": "VariableDeclaration",
                  "scope": 669,
                  "src": "567:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Commission_$651",
                    "typeString": "contract Commission"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 666,
                    "name": "Commission",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 651,
                    "src": "567:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Commission_$651",
                      "typeString": "contract Commission"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "566:23:2"
            },
            "src": "548:42:2"
          },
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "651:51:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 675,
                            "name": "backlog",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "675:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_List_$718_storage",
                              "typeString": "struct LinkedAddressList.List storage ref"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getHeadData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 749,
                          "src": "675:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_List_$718_storage_ptr_$returns$_t_address_$bound_to$_t_struct$_List_$718_storage_ptr_$",
                            "typeString": "function (struct LinkedAddressList.List storage pointer) view returns (address)"
                          }
                        },
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "675:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 674,
                      "name": "Commission",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "664:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Commission_$651_$",
                        "typeString": "type(contract Commission)"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "664:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Commission_$651",
                      "typeString": "contract Commission"
                    }
                  },
                  "functionReturnParameters": 673,
                  "id": 679,
                  "nodeType": "Return",
                  "src": "657:40:2"
                }
              ]
            },
            "documentation": null,
            "id": 681,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "nextJob",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "639:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Commission_$651",
                    "typeString": "contract Commission"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 671,
                    "name": "Commission",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 651,
                    "src": "639:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Commission_$651",
                      "typeString": "contract Commission"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "638:12:2"
            },
            "scope": 698,
            "src": "594:108:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 696,
              "nodeType": "Block",
              "src": "747:55:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 689,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "769:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Commission_$651",
                          "typeString": "contract Commission"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Commission_$651",
                          "typeString": "contract Commission"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 686,
                        "name": "backlog",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "753:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_List_$718_storage",
                          "typeString": "struct LinkedAddressList.List storage ref"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addLast",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 892,
                      "src": "753:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_List_$718_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_List_$718_storage_ptr_$",
                        "typeString": "function (struct LinkedAddressList.List storage pointer,address)"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "753:18:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 693,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "795:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Commission_$651",
                          "typeString": "contract Commission"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Commission_$651",
                          "typeString": "contract Commission"
                        }
                      ],
                      "id": 692,
                      "name": "Commissioned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "782:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Commission_$651_$returns$__$",
                        "typeString": "function (contract Commission)"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 695,
                  "nodeType": "EmitStatement",
                  "src": "777:20:2"
                }
              ]
            },
            "documentation": null,
            "id": 697,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "commission",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "726:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Commission_$651",
                    "typeString": "contract Commission"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 682,
                    "name": "Commission",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 651,
                    "src": "726:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Commission_$651",
                      "typeString": "contract Commission"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "725:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "747:0:2"
            },
            "scope": 698,
            "src": "706:96:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 699,
        "src": "391:419:2"
      }
    ],
    "src": "0:810:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-18T18:56:34.238Z"
}